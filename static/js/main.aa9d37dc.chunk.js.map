{"version":3,"sources":["routes/API.ts","pages/public/Login.tsx","components/MedusaHeader.tsx","models/Genre.ts","pages/public/Home.tsx","models/Release.ts","models/Toast/component.tsx","models/Toast/hook.ts","components/Loader.tsx","pages/public/Submit.tsx","models/ReleaseStatus.ts","models/AudioComponent.ts","components/ProgressBar.tsx","components/Player.tsx","models/Toast/genericError.ts","components/Controls.tsx","components/SubmissionsModal.tsx","pages/private/submissions/index.tsx","routes/Routes.ts","utilities/audioSrc.ts","pages/private/submissions/Selection/index.tsx","pages/NotFound.tsx","components/Toaster.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/private/submissions/index.module.scss","pages/private/submissions/Selection/index.module.scss"],"names":["endpoint","process","jsonHeaders","Headers","API","credentials","fetch","method","headers","body","JSON","stringify","home","get","status","post","data","accept","releaseId","reject","put","delete","Copyright","Typography","variant","color","align","className","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","borderRadius","textField","withRouter","classes","useState","username","password","setCredentials","checkAuth","a","window","location","pathname","Routes","private","submissions","selectList","useEffect","didSubmit","submitEvent","preventDefault","Container","component","maxWidth","alt","src","style","top","left","opacity","CssBaseline","overflow","noValidate","onSubmit","length","TextField","InputLabelProps","required","fullWidth","id","label","name","autoComplete","onChange","e","currentTarget","value","autoFocus","type","Button","Box","mt","items","config","mass","tension","friction","MedusaHeader","props","trail","useTrail","x","height","from","map","index","rest","div","key","Genre","Home","state","releases","componentDidMount","getReleases","response","json","setState","Grid","container","AppBar","position","Toolbar","background","paddingTop","to","public","login","item","xs","md","minHeight","fontWeight","fontFamily","this","release","uniqid","fanLink","coverURL","title","React","Component","emptyRelease","firstName","lastName","email","mainArtists","featurings","date","audioURL","makeComponent","toast","severity","message","useToast","ToastComponent","shared","_toast","_setToast","getToast","setToast","newToast","dispatchToChildren","Loader","CircularProgress","primary","dark","formControl","minWidth","ReleaseStatus","nowPlaying","playlist","paused","currentTime","duration","ProgressBar","hardBind","AudioComponent","seek","event","didSeek","nativeEvent","offsetX","offsetWidth","getTimeString","time","minutes","Math","floor","seconds","round","active","onClick","max","float","right","Player","audioPlayer","shuffling","cycling","muted","volume","softBind","componentDidUpdate","player","current","pause","play","didToggleShuffle","didToggleCycle","didToggleMute","console","table","tweakVolume","parseInt","log","reward","getRandomIx","forward","random","createRef","onAir","tint","ref","onTimeUpdate","onLoadedData","onEnded","join","checked","min","genericError","styles","Controls","controlsProps","RejectCtrls","PendingCtrls","AcceptedCtrls","refresh","deleteRelease","restoreAsPending","pending","_id","acceptRelease","rejectRelease","displayOnHome","setChecked","displaySwitch","FormCheck","SubmissionsModal","close","setDate","setFanLink","parseISO","String","save","Modal","show","onHide","Header","closeButton","Title","Body","size","colSpan","borderTop","target","rel","download","artist","Badge","feat","accepted","utils","DateFnsUtils","disableToolbar","format","inputVariant","KeyboardButtonProps","getDate","slice","getMonth","genre","Footer","GetApp","Submissions","history","split","pop","displayModal","showModal","document","querySelector","classList","add","selectedRelease","closeModal","remove","maxHeight","flexBasis","ArrowBack","toUpperCase","TableContainer","flexGrow","overflowX","Table","stickyHeader","TableHead","TableRow","TableCell","textAlign","TableBody","controlProps","InfoOutlined","rejected","routeProps","path","exact","Login","loading","setLoading","setRelease","typingArtist","setTypingArtist","typingFeats","setTypingFeats","submitted","setSubmitted","onInvalid","invalidEvent","sm","Autocomplete","multiple","freeSolo","options","inputValue","newValue","onInputChange","newInputValue","concat","trim","filter","Boolean","renderInput","params","placeholder","FormControl","InputLabel","Select","labelId","defaultValue","Object","entries","MenuItem","onFocus","select","onKeyDown","ctrlKey","metaKey","inputURL","url","isGoogle","includes","isDropbox","match","getIdFromUrl","Error","audioSrc","error","controls","filePicker","file","files","reader","FileReader","onload","fileExt","toLowerCase","base64","result","img","Image","naturalHeight","naturalWidth","coverBase64","onerror","code","readAsDataURL","border","htmlFor","fontSize","disabled","selectionButton","authorized","setAuthorized","CheckCircle","Cancel","Row","Col","fluid","draggable","icon","faArrowCircleLeft","Toaster","closeToast","reason","Snackbar","open","autoHideDuration","onClose","elevation","createMuiTheme","yellow","typography","App","app","ThemeProvider","hostname","args","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.aa9d37dc.chunk.js","sourcesContent":["import { Credentials } from \"../models/Credentials\";\r\nimport { ReleaseData } from \"../models/Release\";\r\nimport { ReleaseStatus } from \"../models/ReleaseStatus\";\r\n\r\nconst endpoint = {\r\n    login: process.env.REACT_APP_ENDPOINT_ROOT + \"/login\",\r\n    releases: process.env.REACT_APP_ENDPOINT_ROOT + \"/releases\",\r\n    acceptRelease: process.env.REACT_APP_ENDPOINT_ROOT + \"/releases/accept\",\r\n    rejectRelease: process.env.REACT_APP_ENDPOINT_ROOT + \"/releases/reject\",\r\n    checkAuth: process.env.REACT_APP_ENDPOINT_ROOT + \"/checkAuth\",\r\n    refreshToken: process.env.REACT_APP_ENDPOINT_ROOT + \"/login/refreshToken\",\r\n}\r\n\r\nconst jsonHeaders = new Headers({ \r\n    \"Content-Type\": \"application/json\"\r\n})\r\n\r\nexport const API = {\r\n    login: (credentials: Credentials) => {\r\n        return fetch(\r\n            endpoint.login, \r\n            {\r\n                method: \"POST\",\r\n                headers: jsonHeaders,\r\n                body: JSON.stringify({credentials}),\r\n                credentials: \"include\"\r\n            }\r\n        )\r\n    },\r\n    releases: {\r\n        home: () => fetch(\r\n            `${endpoint.releases}/home`\r\n        ),\r\n        get: (status: string) => fetch(\r\n            `${endpoint.releases}/${ status }`,\r\n            {\r\n                method: \"GET\",\r\n                credentials: \"include\"\r\n            }\r\n        ),\r\n        post: (data: ReleaseData) => fetch(\r\n            endpoint.releases, \r\n            {\r\n                method: \"POST\",\r\n                headers: jsonHeaders,\r\n                body: JSON.stringify(data)\r\n            }\r\n        ),\r\n        accept: (releaseId: string) => fetch(\r\n            `${endpoint.acceptRelease}/${releaseId}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: jsonHeaders,\r\n                credentials: \"include\"\r\n            }\r\n        ),\r\n        reject: (releaseId: string) => fetch (\r\n            `${endpoint.rejectRelease}/${releaseId}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: jsonHeaders,\r\n                credentials: \"include\"\r\n            }\r\n        ),\r\n        put: (releaseId: string, data: {status?: ReleaseStatus, displayOnHome?: boolean, date?: Date, fanLink?: string}) => fetch(\r\n            `${endpoint.releases}/${releaseId}`, \r\n            {\r\n                method: \"PUT\",\r\n                headers: jsonHeaders,\r\n                body: JSON.stringify(data),\r\n                credentials: \"include\"\r\n            }\r\n        ),\r\n        delete: (releaseId: string) => fetch(\r\n            `${endpoint.releases}/${releaseId}`, \r\n            {\r\n                method: \"DELETE\",\r\n                credentials: \"include\"\r\n            }\r\n        )\r\n    },\r\n    checkAuth: () => fetch(endpoint.checkAuth, {\r\n        method: \"GET\",\r\n        credentials: \"include\"\r\n    }),\r\n    refreshToken: () => fetch(endpoint.refreshToken, {\r\n        method: \"POST\",\r\n        credentials: \"include\"\r\n    })\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { API } from '../../routes/API';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Routes } from '../../routes/Routes';\r\n\r\nexport function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className=\"mb-5\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Medusa Records\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    borderRadius: 0,\r\n  },\r\n  textField: {\r\n    [`& fieldset`]: {\r\n      borderRadius: 0,\r\n    },\r\n  }\r\n}))\r\n\r\nexport default withRouter(function Login() {\r\n  const classes = useStyles();\r\n  const [credentials, setCredentials] = useState({username: \"\", password: \"\"})\r\n  const checkAuth = async () => {\r\n    const response = await API.checkAuth()\r\n    if (response.status === 204) window.location.pathname = Routes.private.submissions.selectList\r\n  }\r\n  useEffect(() => {checkAuth()}, [])\r\n\r\n  const didSubmit = async (submitEvent: React.FormEvent<HTMLFormElement>) => {\r\n    submitEvent.preventDefault()\r\n    let response = await API.login(credentials)\r\n\r\n    if (response.status === 200) window.location.pathname = Routes.private.submissions.selectList\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className=\"my-auto\">\r\n      <img \r\n        className=\"image-bg\" \r\n        alt=\"login wallpaper\"\r\n        src=\"/assets/login-bg.jpg\" \r\n        style={{top: \"0\", left: \"0\", opacity: \"0.5\" }} />\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img className=\"img-fluid\" alt=\"...\" src=\"/assets/medusa-original.png\" style={{width: \"50%\", overflow: \"hidden\"}} />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          <WarningIcon /> Staff only <WarningIcon />\r\n        </Typography>\r\n        <span>Keep out.</span>\r\n        <form className={classes.form} noValidate onSubmit={ (submitEvent) => credentials.username.length > 0 && credentials.password.length > 0 && didSubmit(submitEvent) }>\r\n          <TextField\r\n            InputLabelProps={{ required: false }} \r\n            variant=\"outlined\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            onChange={ (e) => setCredentials({\r\n              username: e.currentTarget.value!,\r\n              password: credentials.password\r\n            })}\r\n            value={credentials.username}\r\n            autoFocus\r\n            />\r\n          <TextField\r\n            InputLabelProps={{ required: false }} \r\n            variant=\"outlined\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={ (e) => setCredentials({\r\n              username: credentials.username,\r\n              password: e.currentTarget.value!\r\n            })}\r\n            value={credentials.password}\r\n            />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n})","import React from 'react'\r\nimport { useTrail, animated } from 'react-spring'\r\nimport '../styles/MedusaHeader.scss'\r\n\r\nconst items = ['Medusa', 'Records']\r\nconst config = { mass: 10, tension: 1000, friction: 200 }\r\n\r\ninterface HeaderProps {\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n}\r\nexport default function MedusaHeader(props: HeaderProps) {\r\n\r\n  const trail = useTrail(items.length, {\r\n    config, opacity: 1, x:  0, height: 80,\r\n    from: { opacity: 0, x: 20, height: 0 },\r\n  })\r\n  \r\n  return (\r\n    <div id='medusa-header'>\r\n        <div className=\"trails-main\">\r\n            <div>\r\n                {trail.map(({ x, height, ...rest }, index) => (\r\n                    <animated.div\r\n                    key={items[index]}\r\n                    className=\"trails-text\"\r\n                    style={{ ...rest, \r\n                        // transform: x.interpolate(x => `translate3d(0,${x}px,0)`) \r\n                    }}>\r\n                    <animated.div style={{ height }}>{items[index]}</animated.div>\r\n                </animated.div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}","export enum Genre {\r\n    beats = \"Beats\",               \r\n    chill_LoFi = \"Chill/Lo Fi\",         \r\n    dance_EDM = \"Dance/EDM\",           \r\n    darkpsy_hitech = \"Darkpsy/Hitech\",      \r\n    deepHouse = \"Deep House\",          \r\n    dnB_Neurofunk = \"DnB/Neurofunk\",       \r\n    dubstep = \"Dubstep\",             \r\n    electronic_downtempo = \"Electronic/Downtempo\",\r\n    electroHouse = \"Electro House\",       \r\n    futureHouse = \"Future House\",        \r\n    house = \"House\",               \r\n    orchestral = \"Orchestral\",          \r\n    hardcore_rawstyle = \"Hardcore/Rawstyle\",   \r\n    progressiveTrance = \"Progressive Trance\",  \r\n    psytrance = \"Psytrance\",           \r\n    rap_hipHop = \"Rap/Hip Hop\",         \r\n    reggae_dancehall = \"Reggae/Dancehall\",    \r\n    techno = \"Techno\",              \r\n    techHouse = \"Tech House\",          \r\n    trance = \"Trance\",              \r\n    trap = \"Trap\",\r\n    other = \"Other\"         \r\n}","import React from 'react'\r\nimport { AppBar, Button, Grid, Toolbar, Typography } from '@material-ui/core'\r\nimport { ReleaseData } from '../../models/Release'\r\nimport { API } from '../../routes/API'\r\nimport { ArrowDownwardSharp as ArrowDown } from '@material-ui/icons';\r\nimport uniqid from 'uniqid'\r\nimport MedusaHeader from '../../components/MedusaHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../styles/Home.scss'\r\nimport { Routes } from '../../routes/Routes'\r\nimport { Copyright } from './Login';\r\n\r\ninterface HomeState {\r\n    releases: ReleaseData[]\r\n}\r\n\r\nexport default class Home extends React.Component<{}, HomeState> {\r\n\r\n    state: HomeState = {\r\n        releases: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getReleases()\r\n    }\r\n\r\n    getReleases = async () => {\r\n        const response = await API.releases.home()\r\n        const releases = response.status === 200\r\n            ? (await response.json())\r\n            : []\r\n\r\n        this.setState({ releases })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Grid container id='home'>\r\n                <AppBar position=\"fixed\" className=\"bg-transparent text-white-50\">\r\n                    <Toolbar style={{background: 'rgba(18,18,18,0.8)'}}>\r\n                        <img src=\"/assets/medusa-original.png\" style={{height: '5.5vh', paddingTop: '5px'}} alt=\"medusa-logo\" />\r\n                        <Link to={Routes.public.submit} className='ml-auto'>\r\n                            <Button color=\"inherit\">\r\n                                Submit Your Release\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={Routes.public.login}>\r\n                            <Button color=\"inherit\">Staff Login</Button>\r\n                        </Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {/* I am Home. <Link to ={Routes.private.submissions.selectList}>Submissions</Link> */}\r\n                <Grid item xs={10} className='mx-auto d-flex flex-column'>\r\n\r\n                    <Grid item xs={12} md={5} className='d-flex flex-column justify-content-center mx-auto' style={{ minHeight: '100vh' }}>\r\n                        <div className='bg-circle'></div>\r\n                        <img className=\"w-50 img-fluid mx-auto blurring\" src=\"/assets/medusa-original.png\" alt=\"medusa-logo\" />\r\n                        <MedusaHeader />\r\n                        <Typography component=\"h5\" variant=\"h5\" className=\"mt-5 ml-auto\" style={{\r\n                            fontWeight: 800,\r\n                            fontFamily: \"Circular\"\r\n                        }}>\r\n                            <ArrowDown />See our releases.\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid container className=\"mb-5\">\r\n                        {\r\n                            this.state.releases.length > 0 &&\r\n                            this.state.releases.map(release =>\r\n                                <Grid item xs={12} md={4} key={uniqid()}>\r\n                                    <a href={release.fanLink}>\r\n                                        <img className='img-fluid px-1 px-md-3 my-3' src={release.coverURL!} alt={release.title}/>\r\n                                    </a>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    </Grid>\r\n                    <Copyright />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    }\r\n}","import { Genre } from \"./Genre\";\r\nimport { ReleaseStatus } from \"./ReleaseStatus\";\r\n\r\nexport interface ReleaseData {\r\n    _id?: string,\r\n    firstName: string,\r\n    lastName: string, \r\n    email: string,\r\n    mainArtists: string[],\r\n    featurings: string[],\r\n    title: string,\r\n    date: Date,\r\n    genre?: Genre,\r\n    audioURL: string,\r\n    coverBase64?: string,\r\n    coverURL?: string,\r\n    altContact?: string,\r\n    displayOnHome?: boolean,\r\n    fanLink?: string,\r\n    status?: ReleaseStatus\r\n}\r\n\r\nexport const emptyRelease: ReleaseData = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mainArtists: [],\r\n    featurings: [],\r\n    title: \"\",\r\n    date: new Date(),\r\n    audioURL: \"\"\r\n}\r\n","import makeComponent from 'react-flux-component'\r\nimport { Toast } from './interface'\r\n\r\nconst shared: {toast: Toast} = {\r\n    toast: {\r\n        display: false,\r\n        severity: \"error\",\r\n        message: \"\"\r\n    }\r\n}\r\n\r\nexport default makeComponent(shared)","import { useState } from 'react'\r\nimport { Toast } from './interface'\r\nimport ToastComponent from './component'\r\n\r\nexport function useToast() {   \r\n    const [_toast, _setToast] = useState(ToastComponent.shared.toast.value) \r\n    return { \r\n        getToast: () => _toast, \r\n        setToast: (newToast: Toast) => {\r\n            ToastComponent.shared.toast.value = newToast\r\n            ToastComponent.dispatchToChildren()\r\n            _setToast(newToast)\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { theme } from '../App'\r\nexport default function Loader() {\r\n    return <div className=\"position-absolute d-flex\" style={{top: \"0\", left: \"0\", height: \"100vh\", width: \"100vw\", backgroundColor: `rgba(29,29,29,0.5)`}}>\r\n        <div className=\"m-auto d-flex flex-column align-items-center\" >\r\n            <img className=\"img-fluid w-50 mb-5\" src=\"/assets/medusa-original.png\" alt=\"...\" />\r\n            <CircularProgress style={{ color: theme.palette.primary.dark }} />\r\n        </div>\r\n    </div>\r\n}","//#region Imports\r\nimport React, { useState } from 'react'\r\n\r\nimport { emptyRelease } from '../../models/Release'\r\nimport { Genre } from '../../models/Genre';\r\nimport { Copyright } from './Login'\r\nimport { API } from '../../routes/API';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers'\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { audioSrc } from '../../utilities/audioSrc';\r\nimport { useToast } from '../../models/Toast/hook';\r\nimport Loader from '../../components/Loader';\r\n//#endregion\r\n\r\n//#region Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    borderRadius: 0,\r\n  },\r\n  textField: {\r\n    [`& fieldset`]: {\r\n      borderRadius: 0,\r\n    },\r\n  }\r\n}))\r\n//#endregion\r\n\r\nexport default function Submit() {\r\n  const classes = useStyles()\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [release, setRelease] = useState(emptyRelease)\r\n  const [typingArtist, setTypingArtist] = useState(\"\")\r\n  const [typingFeats, setTypingFeats] = useState(\"\")\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const { getToast, setToast } = useToast()\r\n  const toast = getToast()\r\n\r\n  const alertInvalid = (invalidEvent: React.SyntheticEvent) => {\r\n    // invalidEvent.preventDefault()\r\n    setToast({\r\n      display: true,\r\n      message: \"Fill in all required fields and add a cover for your release.\",\r\n      severity: \"error\"\r\n    })\r\n  }\r\n\r\n  const didSubmit = async (submitEvent: React.FormEvent<HTMLFormElement>) => {\r\n    submitEvent.preventDefault()\r\n    setLoading(true)\r\n    const response = await API.releases.post(release)\r\n    const { message } = await response.json()\r\n\r\n    setLoading(false)\r\n    setSubmitted(response.status === 201)\r\n  \r\n    setToast({\r\n      display: true,\r\n      message,\r\n      severity: response.status === 201 ? \"success\" : \"error\"\r\n    })\r\n  }\r\n\r\n  const didSelectGenre = ({target}: React.ChangeEvent<{ value: unknown }>) => {\r\n    setRelease({ ...release, genre: target.value as Genre })\r\n  }\r\n\r\n  const didSelectFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const filePicker = e.currentTarget\r\n    const file = filePicker.files![0]\r\n\r\n    if (!file) return \r\n    else if (file.size > 7340032) {\r\n      setToast({\r\n        display: true,\r\n        message: \"Max size allowed: 7 MB.\",\r\n        severity: \"error\"\r\n      })\r\n      return \r\n    } \r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const fileExt = file.name.split('.').pop()?.toLowerCase()\r\n\r\n      if (!fileExt || !['jpg', 'png'].includes(fileExt)) {\r\n        setToast({\r\n          display: true,\r\n          message: \"Unsupported file type!\",\r\n          severity: \"error\"\r\n        })\r\n        return\r\n      } \r\n\r\n      const base64 = event.target!.result as string\r\n      const img = new Image()\r\n\r\n      img.onload = function () {\r\n        if (img.naturalHeight !== 3000 || img.naturalWidth !== 3000) {\r\n          setToast({\r\n            display: true,\r\n            message: \"Cover image must be exactly 3000x3000.\",\r\n            severity: \"error\"\r\n          })\r\n          filePicker.value = ''\r\n          return\r\n        } \r\n        \r\n        setRelease({...release, coverBase64: base64})\r\n      }\r\n\r\n      img.src = base64\r\n      \r\n    };\r\n    reader.onerror = (event) => {\r\n      console.error(\"File could not be read! Code \" + event.target!.error!.code);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  \r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\" className=\"my-auto\">\r\n      { loading && <Loader /> }\r\n      <CssBaseline />\r\n      <img\r\n        alt=\"...\"\r\n        className=\"image-bg submit-bg\"\r\n        style={{ opacity: \"0.1\" }}\r\n        src=\"/assets/submit-bg.jpg\" />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h2\" className=\"my-5\" style={{\r\n          fontWeight: 800,\r\n          fontFamily: \"Circular\"\r\n        }}>\r\n          Submit your track.\r\n        </Typography>\r\n        {/* <span className=\"ml-auto mb-5\">...if it doesn't suck.</span> */}\r\n        <form className={classes.form} \r\n          onSubmit={didSubmit} onInvalid={alertInvalid}>\r\n          <Grid container spacing={3} >\r\n            <Grid item xs={12} sm={6} className=\"py-0\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                autoComplete=\"first-name\"\r\n                onChange={(e) => setRelease({\r\n                  ...release,\r\n                  firstName: e.currentTarget.value\r\n                })}\r\n                value={release.firstName}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} className=\"py-0\">\r\n              <TextField\r\n                // InputLabelProps={{ required: false }} \r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                id=\"lastName\"\r\n                autoComplete=\"last-name\"\r\n                onChange={(e) => setRelease({\r\n                  ...release,\r\n                  lastName: e.currentTarget.value!\r\n                })}\r\n                value={release.lastName}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className=\"py-0\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                id=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => setRelease({\r\n                  ...release, email: e.currentTarget.value!\r\n                })}\r\n                value={release.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className=\"py-0\">\r\n              <Autocomplete\r\n                multiple\r\n                freeSolo\r\n                options={[]}\r\n                value={release.mainArtists}\r\n                inputValue={typingArtist}\r\n                onChange={(event, newValue) => {\r\n                  setRelease({\r\n                    ...release, \r\n                    mainArtists: newValue as Array<string>\r\n                  });\r\n                }}\r\n                onInputChange={(event, newInputValue) => {\r\n                  const options = newInputValue.split(\",\");\r\n\r\n                  if (options.length > 1) {\r\n                    const mainArtists = release.mainArtists\r\n                                                .concat(options)\r\n                                                .map(x => x.trim())\r\n                                                .filter(Boolean)\r\n                    setRelease({...release, mainArtists});\r\n                  } else {\r\n                    setTypingArtist(newInputValue);\r\n                  }\r\n                }}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    InputLabelProps={{ required: true }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    required={release.mainArtists.length === 0}\r\n                    label=\"Main Artists\"\r\n                    placeholder={ release.mainArtists.length === 0 ? '(confirm with comma: , )' : ''}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className=\"py-0\">\r\n              <Autocomplete\r\n                  multiple\r\n                  freeSolo\r\n                  options={[]}\r\n                  value={release.featurings}\r\n                  inputValue={typingFeats}\r\n                  onChange={(event, newValue) => {\r\n                    setRelease({\r\n                      ...release, \r\n                      featurings: newValue as Array<string>\r\n                    });\r\n                  }}\r\n                  onInputChange={(event, newInputValue) => {\r\n                    const options = newInputValue.split(\",\");\r\n\r\n                    if (options.length > 1) {\r\n                      const featurings = release.featurings \r\n                                                  .concat(options)\r\n                                                  .map(x => x.trim())\r\n                                                  .filter(Boolean)\r\n                      setRelease({...release, featurings});\r\n                    } else {\r\n                      setTypingFeats(newInputValue);\r\n                    }\r\n                  }}\r\n                  renderInput={params => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      className={classes.textField}\r\n                      margin=\"normal\"\r\n                      label=\"Featurings\"\r\n                      placeholder= {release.featurings.length === 0 ? '(confirm with comma: , )' : ''}\r\n                    />\r\n                  )}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} className=\"py-0\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"title\"\r\n                label=\"Track Name\"\r\n                id=\"title\"\r\n                autoComplete=\"release-title\"\r\n                onChange={(e) => setRelease({\r\n                  ...release, title: e.currentTarget.value!\r\n                })}\r\n                value={release.title}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className=\"py-0\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  className={classes.textField}\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  fullWidth\r\n                  inputVariant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Release Date\"\r\n                  value={release.date}\r\n                  onChange={(date: MaterialUiPickersDate) =>\r\n                    setRelease({ ...release, date: date! as Date })\r\n                  }\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                fullWidth>\r\n                <InputLabel id=\"select-genre-label\">Select a genre:</InputLabel>\r\n                <Select\r\n                  labelId=\"select-genre-label\"\r\n                  id=\"select-genre\"\r\n                  defaultValue={''}\r\n                  onChange={didSelectGenre}\r\n                >\r\n                  {\r\n                    Object.entries(Genre).map( ([key, value]) =>\r\n                      <MenuItem value={value} key={key}>{value}</MenuItem>\r\n                    )\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <InputLabel id=\"select-genre-label\">\r\n                Link to the track [Google Drive or Dropbox only, WAV 16 bit]:\r\n              </InputLabel>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.textField + \" mt-0\"}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"audioURL\"\r\n                label=\"Audio URL\"\r\n                id=\"audioURL\"\r\n                autoComplete=\"audio-url\"\r\n                onFocus={(e) => {e.preventDefault(); e.target.select()}}\r\n                onKeyDown={(e) => {\r\n                  if ((e.ctrlKey || e.metaKey) && e.key === 'v') {\r\n                    // console.log(\"pasting\")\r\n                    return\r\n                  } else if (e.key === 'Backspace' || e.key === 'Delete') {\r\n                    (e.target as HTMLInputElement).value = ''\r\n                    setRelease({...release, audioURL: ''})\r\n                  } else e.preventDefault()\r\n                }}\r\n                onChange={(e) => {\r\n                  const inputURL = e.currentTarget.value!\r\n                  e.currentTarget.select()\r\n\r\n                  if (inputURL.length > 0) try {\r\n                    const audioURL = audioSrc(inputURL)\r\n                    setRelease({...release, audioURL})\r\n                  } catch (error) {\r\n                    setRelease({...release, audioURL: ''})\r\n                    setToast({\r\n                      display: true, \r\n                      message: error.message,\r\n                      severity: \"error\"\r\n                    })\r\n                  }\r\n                }}\r\n                // value={release.audioURL}\r\n              />\r\n              {\r\n                release.audioURL.length > 0 &&\r\n                <div className=\"d-flex justify-content-between px-3\">\r\n                <h5 className=\"my-auto\">Preview:</h5>\r\n                <audio controls>\r\n                    <source\r\n                        src={release.audioURL}\r\n                        type=\"audio/x-wav\" />\r\n                </audio>\r\n                </div>\r\n              }\r\n            </Grid>\r\n            <Grid item xs={12} className=\"pt-0 d-flex flex-column\">\r\n              <InputLabel id=\"select-file-label\">Upload cover image:</InputLabel>\r\n              <input\r\n                accept=\"jpg, png\"\r\n                id=\"outlined-button-file\"\r\n                type=\"file\"\r\n                className=\"no-dimensions\"\r\n                onClick={() => { \r\n                  // const toast = getToast()\r\n                  console.log(toast)\r\n                  if (toast.display) setToast({ ...toast, display: false }) \r\n                }}\r\n                style={{overflow: 'hidden'}}\r\n                onChange={didSelectFile}\r\n                required\r\n              />\r\n              <label\r\n                className={classes.textField + \" w-100 h-100 d-flex cursor-pointer file-picker\"}\r\n                style={{ border: \"1px solid grey\" }}\r\n                htmlFor=\"outlined-button-file\"\r\n              >\r\n                <span className=\"m-auto\" style={{ fontSize: \"1rem\" }}>Choose file</span>\r\n              </label>\r\n            </Grid>\r\n            <Grid item xs={12} className=\"d-flex\">\r\n              {\r\n                release.coverBase64 &&\r\n                <img\r\n                  alt=\"...\"\r\n                  src={release.coverBase64}\r\n                  className=\"w-75 mx-auto\"\r\n                />\r\n              }\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={submitted}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  )\r\n}","export enum ReleaseStatus {\r\n    rejected,\r\n    pending,\r\n    accepted\r\n}\r\n\r\nexport type ReleaseStatusString = keyof typeof ReleaseStatus","import makeComponent from 'react-flux-component'\r\nimport { ReleaseData } from './Release'\r\n\r\ninterface SharedAudio {\r\n    nowPlaying: number | null\r\n    playlist: ReleaseData[],\r\n    paused: boolean,\r\n    currentTime: number,\r\n    duration: number\r\n}\r\n\r\nconst shared: SharedAudio = {\r\n    nowPlaying: null,\r\n    playlist: [],\r\n    paused: true,\r\n    currentTime: 0,\r\n    duration: 0\r\n}\r\n\r\nexport default makeComponent(shared)","import React from 'react'\r\nimport AudioComponent from '../models/AudioComponent'\r\nimport { State } from 'react-flux-component'\r\n\r\n\r\ninterface ProgressBarProps {\r\n    didSeek: (offsetX: number, width: number) => void\r\n    active: boolean\r\n}\r\n\r\nexport default class ProgressBar extends AudioComponent<ProgressBarProps, State> {\r\n\r\n    currentTime = this.hardBind(AudioComponent.shared.currentTime)\r\n    duration = this.hardBind(AudioComponent.shared.duration)\r\n\r\n    seek = (event: React.MouseEvent<HTMLProgressElement, MouseEvent>) => {\r\n        this.props.didSeek(event.nativeEvent.offsetX, event.currentTarget.offsetWidth)\r\n    }\r\n\r\n    getTimeString = (time: number) => {\r\n        // if (!time) {console.log(time); return}\r\n\r\n        let minutes = Math.floor(time / 60)\r\n        let seconds = Math.round(time - minutes * 60)\r\n        \r\n        return `${minutes}:${seconds >= 10 ? seconds : \"0\" + seconds}`\r\n    }\r\n\r\n    render () {\r\n\r\n        const [ active, currentTime, duration ] = [this.props.active, this.currentTime.value, this.duration.value]\r\n\r\n        return <>\r\n            <span id=\"track-current-time\">\r\n                { active && this.getTimeString(currentTime) }\r\n            </span>\r\n            <span id=\"seek-obj-container\" className=\"pb-1\">\r\n            <progress \r\n                id=\"progress-bar\" \r\n                className=\"d-none d-md-inline-block\" \r\n                value={ ( active && duration > 0 ) ? currentTime / duration : 0 }\r\n                onClick={this.seek}\r\n                max=\"1\"></progress>\r\n            </span>\r\n            <small style={{float: \"left\", position: \"relative\", left: \"15px\"}} id=\"start-time\"></small>\r\n            <small style={{float: \"right\", position: \"relative\", right: \"20px\"}} id=\"end-time\"></small>\r\n            <span id=\"track-duration\">\r\n                { active && this.getTimeString(duration) }\r\n            </span>\r\n        </>\r\n    }\r\n}","import React from 'react'\r\nimport '../styles/Player.scss'\r\nimport { AppBar, Toolbar } from '@material-ui/core'\r\nimport {\r\n    PlayArrowSharp as PlayArrow,\r\n    RepeatSharp as Repeat,\r\n    SkipNextSharp as SkipNext,\r\n    SkipPreviousSharp as SkipPrevious,\r\n    ShuffleSharp as Shuffle, \r\n    VolumeOffSharp as VolumeOff,\r\n    VolumeMuteSharp as VolumeMute,\r\n    VolumeDownSharp as VolumeDown,\r\n    VolumeUpSharp as VolumeUp,\r\n    PauseSharp as Pause\r\n} from '@material-ui/icons'\r\n\r\n\r\n\r\nimport AudioComponent from '../models/AudioComponent'\r\nimport { State } from 'react-flux-component'\r\nimport ProgressBar from './ProgressBar'\r\nimport { ReleaseStatusString } from '../models/ReleaseStatus'\r\n\r\ninterface PlayerState extends State {\r\n    shuffling: boolean,\r\n    cycling: boolean,\r\n    muted: boolean,\r\n    volume: number\r\n}\r\n\r\ninterface PlayerProps {status: ReleaseStatusString}\r\n\r\nexport default class Player extends AudioComponent<PlayerProps, PlayerState> {\r\n\r\n    constructor(props: PlayerProps) {\r\n        super(props)\r\n        this.audioPlayer = React.createRef()\r\n    }\r\n\r\n    private audioPlayer: React.RefObject<HTMLAudioElement>;\r\n\r\n    state: PlayerState ={\r\n        ...this.state,\r\n        shuffling: false,\r\n        cycling: false,\r\n        muted: false,\r\n        volume: 100\r\n    }\r\n\r\n    nowPlaying = this.hardBind(AudioComponent.shared.nowPlaying)\r\n    playlist = this.hardBind(AudioComponent.shared.playlist)\r\n    paused = this.hardBind(AudioComponent.shared.paused)\r\n\r\n    currentTime = this.softBind(AudioComponent.shared.currentTime)\r\n    duration = this.softBind(AudioComponent.shared.duration)\r\n\r\n    componentDidUpdate = () => {\r\n        const player = this.audioPlayer.current!\r\n        this.paused.value \r\n            ? player.pause() \r\n            : player.play()\r\n    } \r\n    \r\n    didToggleShuffle = () => this.setState({shuffling: !this.state.shuffling})\r\n    didToggleCycle = () => this.setState({cycling: !this.state.cycling})\r\n    didToggleMute = () => {\r\n        this.setState({\r\n            muted: !this.state.muted\r\n        }, () => {\r\n            this.audioPlayer.current!.volume = this.state.muted ? 0 : this.state.volume/100\r\n        })\r\n    } \r\n    \r\n    didSeek = (offsetX: number, width: number) => {\r\n        if (this.nowPlaying.value === null) return\r\n\r\n        const player = this.audioPlayer.current\r\n        if (player) {\r\n            console.table({offsetX, width})\r\n            player.currentTime = offsetX / width * player.duration\r\n            this.currentTime.value = player.currentTime\r\n        } \r\n    }\r\n\r\n    tweakVolume = ({currentTarget}: React.FormEvent<HTMLInputElement>) => {\r\n        this.setState({muted: false, volume: parseInt(currentTarget.value)}, () => \r\n            this.audioPlayer.current!.volume = this.state.volume / 100\r\n        )\r\n        console.log(\"Volume is: \" + currentTarget.value)\r\n    }\r\n    \r\n    reward = () => {\r\n        if (this.nowPlaying.value !== null) {\r\n            if (this.currentTime.value > 2) {\r\n                this.audioPlayer.current!.currentTime = 0\r\n            } else if (this.state.shuffling) {\r\n                this.nowPlaying.value = this.getRandomIx()\r\n            } else if (this.nowPlaying.value === 0) {\r\n                this.nowPlaying.value = this.state.cycling ? this.playlist.value.length - 1 : null\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    forward = () => {\r\n        if (this.nowPlaying.value !== null) {\r\n            if (this.state.shuffling) {\r\n                this.nowPlaying.value = this.getRandomIx()\r\n            } else if (this.nowPlaying.value === this.playlist.value.length - 1) {\r\n                this.nowPlaying.value = this.state.cycling ? 0 : null\r\n            } else this.nowPlaying.value++\r\n        }\r\n    }\r\n    \r\n    getRandomIx = () => {\r\n        return Math.floor(Math.random() * Math.floor(this.playlist.value.length))\r\n    }\r\n\r\n    render() {\r\n        const { cycling, muted, shuffling } = this.state\r\n        const volume = muted ? 0 : this.state.volume\r\n        const paused = this.paused.value\r\n        const onAir = this.nowPlaying.value !== null ? this.playlist.value[this.nowPlaying.value] : null\r\n\r\n        const tint = this.props.status === 'accepted' \r\n                        ? 'var(--success)'\r\n                        : this.props.status === 'rejected'\r\n                            ? 'var(--danger)'\r\n                            : 'var(--theme-tint)'\r\n\r\n                            return <AppBar \r\n            style={{position: \"relative\"}}\r\n            className=\"bg-transparent\"\r\n            >\r\n            <Toolbar className=\"bg-transparent text-white px-0 neon-glow\" id={`player-footer-${this.props.status}`}>\r\n                <audio src={onAir?.audioURL} ref={this.audioPlayer} \r\n                    onTimeUpdate={({currentTarget: player}) => this.currentTime.value = player.currentTime} \r\n                    onLoadedData={({currentTarget: player}) => this.duration.value = player.duration} \r\n                    onEnded={this.forward}\r\n                />  \r\n                {\r\n                    onAir ?\r\n                    <div id=\"title-display\" className=\"ml-3 my-1 text-white\" style={{width: \"auto\"}}>\r\n                        <h5 id=\"track-title\">{onAir.title}</h5>\r\n                        <span id=\"track-artist\"> \r\n                            {\r\n                                `${onAir.mainArtists.join(', ')}${\r\n                                    onAir.featurings.length > 0 \r\n                                        ? ` feat. ${onAir.featurings.join(', ')}` \r\n                                        : '' \r\n                                }` \r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    : <div id=\"m-title-space\"></div>\r\n                }\r\n                <div id=\"player-controls-wrapper\" className=\"d-flex flex-column mx-auto pt-1\">\r\n                    <div id=\"player-controls\" className=\"d-flex justify-content-around align-items-center mx-auto\">\r\n                        <label className={`form-check-label d-flex align-items-center ${shuffling ? \"control-toggled\" : \"\"}`}>\r\n                            <input onChange={this.didToggleShuffle} type=\"checkbox\" className=\"form-check-input d-none\"\r\n                                name=\"\" id=\"shuffle-toggle\" checked={shuffling} />\r\n                            <Shuffle />\r\n                        </label>\r\n                        <SkipPrevious onClick={this.reward} />\r\n                        {\r\n                            paused  ? <PlayArrow onClick={ () => this.paused.value = false } />\r\n                                    : <Pause     onClick={ () => this.paused.value = true  } />\r\n                        }\r\n                        <SkipNext onClick={this.forward} />\r\n                        <label className={`form-check-label d-flex align-items-center ${cycling ? \"control-toggled\" : \"\"}`}>\r\n                            <input onChange={this.didToggleCycle} type=\"checkbox\" className=\"form-check-input d-none\"\r\n                                name=\"\" id=\"cycle-toggle\" checked={cycling} />\r\n                            <Repeat />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center align-items-center text-center\">\r\n                        <ProgressBar didSeek={this.didSeek} active={this.nowPlaying.value !== null}/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"mr-3 position-absolute d-none d-md-flex text-white align-items-center\"\r\n                    style={{right: \"15px\"}}>\r\n                    {\r\n                        muted\r\n                            ? <VolumeOff onClick={this.didToggleMute} />\r\n                            : volume > 50 \r\n                                ? <VolumeUp onClick={this.didToggleMute} />\r\n                                : volume > 10\r\n                                    ? <VolumeDown onClick={this.didToggleMute} />\r\n                                    : <VolumeMute onClick={this.didToggleMute} />\r\n                    }\r\n                    <input \r\n                        type=\"range\" \r\n                        id=\"volume-bar\"\r\n                        name=\"volume\" \r\n                        className=\"ml-3\" \r\n                        min=\"0\" max=\"100\" \r\n                        value={volume} \r\n                        onChange={this.tweakVolume}\r\n                        style={{\r\n                            maxWidth: \"90px\",\r\n                            background: `linear-gradient(to right, ${tint} 0%, ${tint} ${volume}%, #fff ${volume}%, #fff 100%)`\r\n                        }} />\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    }\r\n}","import { Toast } from \"./interface\";\r\nexport const genericError: Toast = {\r\n    display: true,\r\n    severity: \"error\",\r\n    message: \"Something went wrong. Try again later.\"\r\n}","import React, { useState } from 'react'\r\nimport { Button, FormCheck } from 'react-bootstrap'\r\nimport { \r\n    Done as AcceptIcon, \r\n    Clear as RejectIcon, \r\n    SettingsBackupRestore as RestoreIcon\r\n} from '@material-ui/icons'\r\nimport uniqid from 'uniqid'\r\n\r\nimport styles from '../pages/private/submissions/index.module.scss';\r\nimport { API } from '../routes/API';\r\nimport { useToast } from '../models/Toast/hook';\r\nimport { ReleaseData } from '../models/Release';\r\nimport { genericError } from '../models/Toast/genericError';\r\nimport { ReleaseStatus, ReleaseStatusString } from '../models/ReleaseStatus';\r\n\r\ninterface ControlsProps {\r\n    release: ReleaseData,\r\n    refresh: () => void\r\n}\r\n\r\nconst className = styles['release-row-controls']\r\n\r\nexport function Controls({status, controlsProps}: {status: ReleaseStatusString, controlsProps: ControlsProps}) {\r\n    switch (status) {\r\n        case 'rejected': return <RejectCtrls   {...controlsProps} />\r\n        case 'pending':  return <PendingCtrls  {...controlsProps} />\r\n        case 'accepted': return <AcceptedCtrls {...controlsProps} />\r\n    }\r\n}\r\n\r\nfunction RejectCtrls ({release, refresh}: ControlsProps) {\r\n    const { setToast } = useToast()\r\n    const deleteRelease = async (id: string) => {\r\n        const response = await API.releases.delete(id)\r\n    \r\n        if (response.status === 202) {\r\n            setToast({\r\n                message:\"Release removed.\",\r\n                display: true,\r\n                severity: \"success\"\r\n            })\r\n            refresh()\r\n        } else setToast(genericError)\r\n    }\r\n\r\n    const restoreAsPending = async (id: string) => {\r\n        const response = await API.releases.put(id, { status: ReleaseStatus.pending })\r\n\r\n        if (response.status === 204) {\r\n            setToast({\r\n                display: true,\r\n                message: \"Release back to pending.\",\r\n                severity: \"success\"\r\n            })\r\n            refresh()\r\n        }\r\n    }\r\n\r\n    return <div className={ className }>\r\n        <Button variant=\"outline-warning\" className=\"mr-2 rounded-pill px-2\" onClick={() => restoreAsPending(release._id!)}>\r\n            <RestoreIcon className=\"mr-md-2\" /><span className=\"d-none d-md-inline\">Restore as pending</span>\r\n        </Button>\r\n        <Button variant=\"outline-danger\" className=\"rounded-pill px-2\" onClick={() => deleteRelease(release._id!)}>\r\n            <RejectIcon className=\"mr-md-2\" /><span className=\"d-none d-md-inline\">Reject now</span>\r\n        </Button>\r\n    </div> \r\n}\r\n\r\n\r\nfunction PendingCtrls ({release, refresh}: ControlsProps) {\r\n    const { setToast } = useToast()\r\n\r\n    const acceptRelease = async (id: string) => {\r\n        // const response = await API.releases.put(id, { status: ReleaseStatus.accepted })\r\n        const response = await API.releases.accept(id)\r\n\r\n        if (response.status === 204) {\r\n            setToast({\r\n                display: true,\r\n                message: \"Release accepted\",\r\n                severity: \"success\"\r\n            })\r\n            refresh()\r\n        } else setToast(genericError)\r\n    }\r\n    \r\n    const rejectRelease = async (id: string) => {\r\n        const response = await API.releases.reject(id)\r\n        \r\n        if (response.status === 204) {\r\n            setToast({\r\n                display: true,\r\n                message: \"Release rejected\",\r\n                severity: \"success\"\r\n            })\r\n            refresh()\r\n        } else setToast(genericError)\r\n    }\r\n\r\n    return <div className={ className }>\r\n        <Button variant=\"outline-success\" className=\"mr-2 rounded-pill\" onClick={() => acceptRelease(release._id!)}>\r\n            <AcceptIcon />\r\n        </Button>\r\n        <Button variant=\"outline-danger\" className=\"rounded-pill\" onClick={() => rejectRelease(release._id!)}>\r\n            <RejectIcon />\r\n        </Button>\r\n    </div> \r\n}\r\n\r\n\r\nfunction AcceptedCtrls ({release}: ControlsProps) {\r\n    \r\n    const [checked, setChecked] = useState(release.displayOnHome!)\r\n    const { setToast } = useToast()\r\n\r\n    const displaySwitch = async () => {\r\n        const response = await API.releases.put(\r\n            release._id!, \r\n            {displayOnHome: !checked}\r\n        )\r\n\r\n        response.status === 204\r\n            ? setChecked(!checked)\r\n            : setToast(genericError)\r\n    }\r\n\r\n    return <div className=\"d-flex w-100 h-100\">\r\n        <FormCheck\r\n            type=\"switch\"\r\n            id={uniqid()}\r\n            label=\"\"\r\n            className=\"m-auto\"\r\n            onChange={displaySwitch}\r\n            checked={checked}\r\n            />\r\n    </div>\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Modal, Button, Badge, Table } from 'react-bootstrap'\r\nimport { ReleaseData } from '../models/Release'\r\nimport uniqid from 'uniqid'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker\r\n} from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { API } from '../routes/API'\r\nimport { useToast } from '../models/Toast/hook'\r\nimport { genericError } from '../models/Toast/genericError'\r\nimport { parseISO } from 'date-fns/esm';\r\nimport { GetApp } from '@material-ui/icons';\r\nimport { ReleaseStatus } from '../models/ReleaseStatus';\r\nimport { TextField } from '@material-ui/core';\r\n \r\n\r\ninterface SubmissionsModalProps {\r\n    display: boolean,\r\n    close: () => void,\r\n    release?: ReleaseData\r\n}\r\n\r\nexport default function SubmissionsModal({ release, display, close }: SubmissionsModalProps) {\r\n\r\n\r\n    const [date, setDate] = useState(new Date())\r\n    const [fanLink, setFanLink] = useState('')\r\n    const { setToast } = useToast()\r\n\r\n    useEffect( () => {\r\n        if (release) {\r\n            setDate(parseISO(String(release.date)))\r\n            setFanLink(release.fanLink || '')\r\n        }\r\n    }, [release])\r\n\r\n    if (!release) {return <></>}\r\n\r\n    const save = async () => {\r\n        if (date !== release.date || fanLink !== release.fanLink) {\r\n            const response = await API.releases.put(release._id!, {date, fanLink})\r\n            \r\n            response.status !== 204\r\n                ? setToast(genericError)\r\n                : close()\r\n        }\r\n    }\r\n\r\n    return <Modal show={display} onHide={close}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>{release.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Table variant=\"dark\" size=\"sm\" className=\"bg-transparent\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan={2} style={{borderTop: '0px'}}>\r\n                            <div className=\"h-100 w-100 text-center\">\r\n                                <a href={release.coverURL} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                                    <img className=\"img-fluid w-50\" src={release.coverURL} alt={release.title} />\r\n                                </a>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>First Name:</td>\r\n                        <td>{release.firstName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Last Name:</td>\r\n                        <td>{release.lastName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email:</td>\r\n                        <td>{release.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Artists:</td>\r\n                        <td>{\r\n                            release.mainArtists.map(artist => <Badge variant=\"secondary\" className=\"ml-1\" key={uniqid()}>{artist}</Badge>)\r\n                        }{\r\n                            release.featurings.length > 0 &&\r\n                            <> feat. {\r\n                                release.featurings.map(feat => <Badge variant=\"secondary\" className=\"ml-1\" key={uniqid()}>{feat}</Badge>)\r\n                            }\r\n                            </>\r\n                        }</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Date:</td>\r\n                        <td>\r\n                            {\r\n                                release.status === ReleaseStatus.accepted \r\n                                ? \r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    // className={classes.textField}\r\n                                    variant=\"inline\"\r\n                                    format=\"dd/MM/yyyy\"\r\n                                    fullWidth\r\n                                    inputVariant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Release Date\"\r\n                                    value={date}\r\n                                    onChange={(date) => setDate(date as Date)}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                :\r\n                                <span>{('0' + date.getDate()).slice(-2)}/{('0' + date.getMonth()).slice(-2)}/{date.getFullYear()}</span>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Genre:</td>\r\n                        <td>{release.genre}</td>\r\n                    </tr>\r\n                    {\r\n                        release.status === ReleaseStatus.accepted &&\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    name=\"fanlink\"\r\n                                    label=\"Fanlink\"\r\n                                    id=\"fanlink\"\r\n                                    autoComplete=\"fanlink\"\r\n                                    onChange={({currentTarget: textField}) => setFanLink(textField.value!)}\r\n                                    value={fanLink}\r\n                                    />\r\n                            </td>\r\n                        </tr>\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <a className=\"mr-auto\" href={release.audioURL} download target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Button variant=\"outline-light\">\r\n                    <GetApp /> Download\r\n                </Button>\r\n            </a>\r\n            <Button variant=\"secondary\" onClick={close}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={save}>\r\n                Save Changes\r\n            </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n}","import React from 'react'\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Grid, Typography, TableContainer, Table, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\r\nimport { ArrowBack, InfoOutlined, PlayCircleOutlineOutlined as PlayIcon } from '@material-ui/icons';\r\n\r\nimport uniqid from 'uniqid'\r\n\r\nimport Player from '../../../components/Player';\r\nimport { Controls } from '../../../components/Controls';\r\nimport { ReleaseStatusString } from '../../../models/ReleaseStatus';\r\nimport { ReleaseData } from '../../../models/Release';\r\nimport { API } from '../../../routes/API';\r\n\r\nimport styles from './index.module.scss'\r\n\r\nimport AudioComponent from '../../../models/AudioComponent';\r\nimport { State } from 'react-flux-component';\r\nimport SubmissionsModal from '../../../components/SubmissionsModal';\r\nimport { Routes } from '../../../routes/Routes';\r\n\r\ninterface SubmissionsState extends State {\r\n    status: ReleaseStatusString\r\n    displayModal: boolean,\r\n    selectedRelease?: ReleaseData\r\n}\r\n\r\nexport default class Submissions extends AudioComponent<RouteComponentProps, SubmissionsState> {\r\n\r\n    state: SubmissionsState = {\r\n        ...this.state,\r\n        status: String(this.props.history.location.pathname).split(\"/\").pop()! as ReleaseStatusString,\r\n        displayModal: false\r\n    }\r\n\r\n    releases = this.hardBind(AudioComponent.shared.playlist)    \r\n    nowPlaying = this.softBind(AudioComponent.shared.nowPlaying)\r\n    paused = this.softBind(AudioComponent.shared.paused)\r\n\r\n    componentDidMount  = () => this.getReleases()\r\n    componentDidUpdate = () => this.getReleases()\r\n    \r\n    getReleases = async () => {\r\n        const response = await API.releases.get(this.state.status)\r\n        const releases = await response.json() as ReleaseData[]\r\n\r\n        this.releases.value = releases\r\n        console.log(this.releases.value)\r\n    }\r\n\r\n    play = (index: number) => {\r\n        this.nowPlaying.value = index\r\n        this.paused.value = false\r\n    }\r\n\r\n    showModal = (release: ReleaseData) => {\r\n        document.querySelector('#root')?.classList.add('blurred')\r\n        this.setState({displayModal: true, selectedRelease: release})\r\n    }\r\n    \r\n    closeModal = () => {\r\n        document.querySelector('#root')?.classList.remove('blurred')\r\n        this.setState({displayModal: false})\r\n    }\r\n\r\n    render() {\r\n        const { status } = this.state\r\n        const releases = this.releases.value\r\n        \r\n        return (<>\r\n            <SubmissionsModal release={this.state.selectedRelease} close={this.closeModal} display={this.state.displayModal}/>\r\n            <Grid container className=\"flex-column no-scrollbar flex-nowrap\" style={{\r\n                maxHeight: \"100vh\",\r\n                width: \"100vw\"\r\n                }}>\r\n                <Grid item xs={12} className=\"d-flex position-relative\" style={{\r\n                    flexBasis: \"unset\"\r\n                    }}>\r\n                    <div className=\"ml-md-5 d-flex w-100 h-100 position-absolute\">\r\n                        <div className=\"mr-auto my-auto ml-3 ml-md-0\">\r\n                            <Link to={Routes.private.submissions.selectList}>\r\n                                <ArrowBack className=\"mr-1\" />\r\n                                <span className=\"d-none d-md-inline\">Back</span>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <Typography component=\"h1\" variant=\"h5\" className=\"my-5 mx-auto\" style={{\r\n                        fontWeight: 800,\r\n                        fontFamily: \"Circular\"\r\n                    }}>\r\n                        {\r\n                            status[0].toUpperCase() + status.slice(1) + \" releases.\"\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <TableContainer className=\"bg-transparent px-md-5 mx-auto\" style={{flexGrow: 1, overflowX: \"hidden\"}} >\r\n                    <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{opacity: '0.9'}}></TableCell>\r\n                                <TableCell className=\"pl-0\" style={{opacity: '0.9'}}>Title</TableCell>\r\n                                <TableCell style={{opacity: '0.9'}}>Artists</TableCell>\r\n                                <TableCell>Info</TableCell>\r\n                                <TableCell style={{opacity: '0.9', textAlign: 'center'}}>\r\n                                    {\r\n                                        status === 'accepted' && 'Display on Home'\r\n                                    }\r\n                                </TableCell>\r\n                                \r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                releases.length > 0 &&\r\n                                releases.map((release, index) => {\r\n\r\n                                    const controlProps = {\r\n                                        status,\r\n                                        controlsProps: {\r\n                                            release, \r\n                                            refresh: this.getReleases\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    return (\r\n                                    <TableRow className={styles[\"playlist-row\"]} key={uniqid()}>\r\n                                        <TableCell style={{ width: \"15px\" }}>\r\n                                            <PlayIcon \r\n                                                className={styles[\"play-icon\"]} \r\n                                                onClick={() => this.play(index)} \r\n                                                />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            { release.title }\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            { release.mainArtists.join(', ') }\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <InfoOutlined onClick={() => this.showModal(release)}/>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <Controls {...controlProps} />\r\n                                        </TableCell>\r\n                                    </TableRow>)\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Player status={status}/>\r\n            </Grid>\r\n        </>)\r\n    }\r\n}","import Login from '../pages/public/Login'\r\nimport Home from '../pages/public/Home'\r\nimport Submit from '../pages/public/Submit'\r\nimport Submissions from '../pages/private/submissions'\r\nimport SelectSubsList from '../pages/private/submissions/Selection'\r\nimport { RouteProps } from 'react-router-dom'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nclass SubmissionsRoutes { \r\n    selectList = \"/submissions\"\r\n    pending    = `${this.selectList}/pending`\r\n    accepted   = `${this.selectList}/accepted`\r\n    rejected   = `${this.selectList}/rejected`\r\n}\r\n\r\nexport class Routes {\r\n    static readonly public = {\r\n        home: \"/\",\r\n        login: \"/login\",\r\n        submit: \"/submit\"\r\n    }\r\n\r\n    static readonly private = {\r\n        submissions: new SubmissionsRoutes()\r\n    }\r\n}\r\n\r\nexport const routeProps: RouteProps[] = [\r\n    {\r\n        path: Routes.public.home,\r\n        component: Home,\r\n        exact: true\r\n    },\r\n    {\r\n        path: Routes.public.login,\r\n        component: Login,\r\n        exact: true\r\n    },\r\n    {\r\n        path: Routes.public.submit,\r\n        component: Submit,\r\n        exact: true\r\n    },\r\n    {\r\n        path: Routes.private.submissions.selectList,\r\n        component: SelectSubsList,\r\n        exact: true\r\n    },\r\n    {\r\n        path: [\r\n            Routes.private.submissions.pending,\r\n            Routes.private.submissions.accepted,\r\n            Routes.private.submissions.rejected,\r\n        ],\r\n        component: Submissions,\r\n        exact: true\r\n    },\r\n    {\r\n        component: NotFound //404\r\n    }\r\n]","function getIdFromUrl (url: string) { return url.match(/[-\\w]{25,}/); }\r\n\r\nexport function audioSrc (url: string) {\r\n\r\n    const isGoogle = url.includes(\"drive.google.com\")\r\n    const isDropbox = url.includes(\"dropbox.com\")\r\n\r\n    if (isGoogle) {\r\n        const id = getIdFromUrl(url)\r\n        if (id) return `https://drive.google.com/uc?id=${id[0]}`\r\n    } else if (isDropbox) {\r\n        return url.split('?')[0] + '?raw=1'\r\n    }\r\n    \r\n    throw new Error(\r\n        'Invalid URL: Google Drive or Dropbox are supported only. Also double-check the link to have public permissions.'\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './index.module.scss'\r\n// import styles from '../styles/Selection.module.scss'\r\nimport { Warning, CheckCircle, Cancel } from '@material-ui/icons';\r\nimport { API } from '../../../../routes/API'\r\nimport Loader from '../../../../components/Loader'\r\n\r\nexport default function SelectSubsList() {\r\n    // const currentPath = window.location.pathname\r\n    const selectionButton = styles[\"selection-button\"] + \" \"\r\n    const [authorized, setAuthorized] = useState(false)\r\n    const checkAuth = async () => {\r\n        const response = await API.checkAuth()\r\n        setAuthorized(response.status === 204)    \r\n    }\r\n    useEffect(()=>{checkAuth()}, []);\r\n\r\n    return (<>{\r\n            authorized ? \r\n            <Grid container>\r\n                <img\r\n                    alt=\"...\"\r\n                    className=\"image-bg submit-bg\"\r\n                    style={{ opacity: \"0.1\" }}\r\n                    src=\"/assets/submit-bg.jpg\" \r\n                    />\r\n\r\n                <Grid item xs={12} className=\"d-flex my-4 my-md-0\">\r\n                <Typography component=\"h1\" variant=\"h2\" className=\"m-auto mobile-h2\" style={{\r\n                    fontWeight: 800,\r\n                    fontFamily: \"Circular\"\r\n                }}>\r\n                    Submissions.\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} className=\"d-flex\">\r\n                    <Link to={\"/submissions/pending\"} className=\"mx-auto mb-auto\">\r\n                        <Button variant=\"outline-warning\" className={ selectionButton + styles.pending } style={{color: \"yellow\"}}>\r\n                            <Warning /><br />Pending\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} className=\"d-flex\">\r\n                    <Link to={\"/submissions/accepted\"} className=\"mx-auto mb-auto\">\r\n                        <Button variant=\"outline-success\" className={ selectionButton + styles.accepted } style={{color: \"lightgreen\"}}>\r\n                            <CheckCircle /><br />Accepted\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} className=\"d-flex\">\r\n                    <Link to={\"/submissions/rejected\"} className=\"mx-auto mb-auto\">\r\n                        <Button variant=\"outline-danger\" className={ selectionButton + styles.rejected } style={{color: \"rgb(255, 162, 162)\"}}>\r\n                            <Cancel /><br />Rejected\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n            </Grid>\r\n            : <Loader />\r\n        }</>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Container, Row, Col, Image} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Routes } from '../routes/Routes'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function NotFound() {\r\n    return <>\r\n        <Container>\r\n            <Row className=\"d-flex\" style={{height: \"100vh\"}}>\r\n                <Col xs={9} md={6} className=\"m-auto d-flex\">\r\n                    <Row>\r\n                        <Col xs={12} className=\"d-flex\">\r\n                            <Image fluid className=\"mx-auto w-50\" src=\"/assets/medusa-original.png\" draggable={false} />\r\n                        </Col>\r\n                        <Col xs={12} className=\"d-flex\">\r\n                            <h3 className=\"mx-auto\">\r\n                                404: Page not found\r\n                            </h3>\r\n                        </Col>\r\n                        <Col xs={12} className=\"d-flex\">\r\n                            <Link className=\"mx-auto\" to={Routes.public.home}>\r\n                                <FontAwesomeIcon icon={faArrowCircleLeft} /> Back to home</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>    \r\n    </>\r\n}","import React from 'react'\r\n\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\nimport ToastComponent from '../models/Toast/component';\r\n\r\nexport default class Toaster extends ToastComponent {\r\n    \r\n    toast = this.hardBind(ToastComponent.shared.toast)\r\n    \r\n    closeToast = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason !== \"clickaway\") {\r\n            this.toast.value = ({ ...this.toast.value, display: false });\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        const { display, severity, message } = this.toast.value\r\n        return (\r\n            <Snackbar open={display}\r\n            autoHideDuration={6000} onClose={this.closeToast}>\r\n                <MuiAlert\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                    onClose={this.closeToast}\r\n                    severity={severity}\r\n                    >\r\n                    { String(message) }\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Route, BrowserRouter, Switch, HashRouter } from 'react-router-dom';\r\nimport { routeProps } from './routes/Routes';\r\nimport uniqid from 'uniqid'\r\nimport './styles/App.scss'\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport { yellow } from '@material-ui/core/colors';\r\nimport Toaster from './components/Toaster';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: yellow\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Circular',  \r\n      'Barlow',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n})\r\n\r\nexport default function App() {\r\n  const app = (\r\n    <ThemeProvider theme={theme}>\r\n      <Toaster />\r\n      <Switch>\r\n        {\r\n          routeProps.map( props => <Route key={ uniqid() } { ...props } /> )\r\n        }\r\n      </Switch>\r\n    </ThemeProvider>\r\n  )\r\n  return ( process.env.NODE_ENV === 'production'\r\n        ? <HashRouter>{app}</HashRouter>\r\n        : <BrowserRouter>{app}</BrowserRouter>\r\n\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Routes } from './routes/Routes';\r\nimport { API } from './routes/API';\r\n\r\nconst location = {\r\n  get: function() {\r\n    // const loc = process.env.NODE_ENV === 'production' \r\n    //   ? window.location.hash \r\n    //   : \r\n      return window.location.pathname\r\n\r\n    // console.log(process.env.NODE_ENV)\r\n    // return loc\r\n  },\r\n  set: function(value: string) {\r\n    // if (process.env.NODE_ENV === 'production') {\r\n    //   window.location.hash = value\r\n    // } else \r\n      window.location.pathname = value\r\n  }\r\n}\r\n\r\nconst fetch = window.fetch;\r\nwindow.fetch = (...args) => (async(args) => {\r\n    let response = await fetch(...args);\r\n\r\n    if (response.status === 403) {\r\n      response = await API.refreshToken()\r\n      \r\n      if (response.status === 222) {\r\n        response = await fetch(...args)\r\n      }\r\n    }\r\n\r\n    if (response.status === 401) {\r\n      if (location.get() !== Routes.public.login) location.set(Routes.public.login)\r\n    }\r\n\r\n    return response;\r\n})(args);\r\n\r\nfunction render() {\r\n  ReactDOM.render(\r\n    // <React.StrictMode>\r\n      <App />,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play-icon\":\"submissions_play-icon__1_pBj\",\"release-row-controls\":\"submissions_release-row-controls__2X1k7\",\"playlist-row\":\"submissions_playlist-row__vH8oX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selection-button\":\"Selection_selection-button__xJMzN\",\"pending\":\"Selection_pending__3siYy\",\"accepted\":\"Selection_accepted__3cq8f\",\"rejected\":\"Selection_rejected__2HrUs\"};"],"sourceRoot":""}